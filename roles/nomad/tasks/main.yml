- name: Create Nomad group
  group: name={{ nomad_group }} system=yes state=present

- name: Create Nomad user
  user: >
    name={{ nomad_user }}
    shell=/bin/false
    createhome=no
    group={{ nomad_group }}
    system=yes
    state=present

- name: Download Nomad
  get_url: >
    url={{ nomad_url }}
    dest={{ nomad_download_dir }}/nomad{{ nomad_version }}.zip

- name: Ensure unzip is installed
  yum: name=unzip state=installed

- name: Unzip Nomad to installation directory
  command: unzip -o {{ nomad_download_dir }}/nomad{{ nomad_version }}.zip -d {{ nomad_install_dir }}
  args:
    creates: "{{ nomad_install_dir }}/nomad{{ nomad_version }}"

- name: Set nomad to link to installed version
  file: >
    src="{{ nomad_install_dir }}/nomad"
    dest="{{ nomad_install_dir }}/nomad{{ nomad_version }}"
    state=link

- name: Create Nomad configuration directory
  file: >
    path={{ nomad_config_dir }}
    owner={{ nomad_user }}
    group={{ nomad_group }}
    mode=0755
    state=directory

- name: Create Nomad configuration directory
  file:
    path: "{{ nomad_config_dir }}"
    state: directory
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"

- name: Create Nomad data directory
  file: >
    path={{ nomad_data_dir }}
    owner={{ nomad_user }}
    group={{ nomad_group }}
    mode=0755
    state=directory

- name: Make sure nomad.service does not exist
  file: >
    state=absent
    path=/etc/systemd/system/nomad.service

- name: Create nomad.service configuration
  template: >
    src=nomad.service.j2
    dest=/etc/systemd/system/nomad.service
    owner=root
    group=root
    mode=0644
  notify: restart nomad

- name: Create Nomad server configuration file
  template: >
    src=nomad_server.hcl.j2
    dest={{ nomad_config_dir }}/server.hcl
    owner={{ nomad_user }}
    group={{ nomad_group }}
    mode=0644
  notify: restart nomad
  when: inventory_hostname in groups['nomad_servers']


- name: Create Nomad client configuration file
  template: >
    src=nomad_client.hcl.j2
    dest={{ nomad_config_dir }}/client.hcl
    owner={{ nomad_user }}
    group={{ nomad_group }}
    mode=0644
  notify: restart nomad
  when: inventory_hostname in groups['nomad_clients']

- name: Create otel directory if not exists
  file:
    path: "{{ otel_jar_dir }}"
    state: directory

- name: Download opentelemetry-javaagent.jar
  get_url:
    url: "https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v2.10.0/opentelemetry-javaagent.jar"
    dest: "/opt/otel/opentelemetry-javaagent.jar"

- name: Ensure Nomad service is started and enabled on boot
  service: name={{ nomad_service_name }} state=started enabled=yes